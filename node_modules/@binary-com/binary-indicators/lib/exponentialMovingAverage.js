"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.exponentialMovingAverageArray = void 0;

var _math = require("./math");

var exponentialMovingAverage = function exponentialMovingAverage(data, config) {
  var initVal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var periods = config.periods,
      field = config.field,
      _config$pipSize = config.pipSize,
      pipSize = _config$pipSize === void 0 ? 2 : _config$pipSize;
  var weightingMultiplier = 2 / (periods + 1);
  var vals = (0, _math.takeField)(data, field);

  if (initVal) {
    return (vals[0] - initVal) * weightingMultiplier + initVal;
  }

  if (data.length < periods) {
    throw new Error('Periods longer than data length');
  }

  var meanVal = (0, _math.mean)((0, _math.takeField)(data.slice(0, periods), field));
  return +vals.slice(periods).reduce(function (prev, e) {
    return (e - prev) * weightingMultiplier + prev;
  }, meanVal).toFixed(pipSize);
};

var exponentialMovingAverageArray = function exponentialMovingAverageArray(data, config) {
  var periods = config.periods;
  var initVal = exponentialMovingAverage(data.slice(0, periods), config);
  return data.slice(periods - 1).map(function (x, i) {
    return !i ? initVal : initVal = exponentialMovingAverage([x], config, initVal);
  });
};

exports.exponentialMovingAverageArray = exponentialMovingAverageArray;
var _default = exponentialMovingAverage;
exports["default"] = _default;